---
// src/components/optimize_image.astro
import { Picture } from 'astro:assets';
import type { ImageMetadata } from 'astro';

// Importer automatiquement toutes les images
const images = import.meta.glob('../assets/**/*.{png,jpg,jpeg,webp,avif,gif}', { 
  eager: true,
  import: 'default'
}) as Record<string, ImageMetadata>;

// Créer le mapping avec les chemins absolus
const imageMap: Record<string, ImageMetadata> = {};
for (const [path, image] of Object.entries(images)) {
  const absolutePath = path.replace('../', '/src/');
  imageMap[absolutePath] = image;
}

// Props du composant
export interface Props {
  src: string;
  alt: string;
  widths?: number[];
  sizes?: string;
  class?: string;
  loading?: "eager" | "lazy";
  [key: string]: any;
}

const { 
  src, 
  alt, 
  widths = [400, 800, 1200],
  sizes = "(max-width: 767px) 100vw, 800px",
  class: className = "w-full h-auto",
  loading = "lazy",
  ...props 
} = Astro.props;

// Récupérer l'image ou utiliser le src tel quel
const imageSrc = imageMap[src] || src;
---

<Picture 
  src={imageSrc} 
  alt={alt}
  widths={widths}
  sizes={sizes}
  formats={['avif', 'webp', 'png', 'jpg']}
  class={className}
  loading={loading}
  {...props}
/>